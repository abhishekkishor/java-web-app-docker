node{
    
    def buildNumber = BUILD_NUMBER
    
    def masterLogin = 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.41.85'
    
    stage("Git Clone"){
        
        echo "===============================Pulling Application Code======================================="
        
        git branch: 'master', url: 'https://github.com/abhishekkishor/java-web-app-docker.git'
        
        echo "==================================Application Code Pulled====================================="
        
    }
    
    stage("Maven Clean Package"){
    
        echo "==================================Building Maven Package======================================"
        
        sh "mvn clean package"
        
    echo "================================Maven Package Built (WAR)========================================="
        
    }
    
    stage("Archiving Artifact"){
        
        echo "===================================Archiving Artifact========================================"
        
        archiveArtifacts artifacts: '**/*.war'
    }
    
    stage("Build Docker Image"){
        
        echo "==================================Building Docker Image======================================="
        
        sh "docker build -t abhishekkishor1/java-web-app-swarm:${buildNumber} ."
        
        echo "===============================Docker Image Built Successfully================================"
    }
    
    stage("Docker Hub Login & Pushing Image"){
        
        echo "======================================Docker Login============================================"
        
        withCredentials([string(credentialsId: 'abhishekkishor1', variable: 'Docker_Hub_Pwd')]) {
            
            sh "docker login -u abhishekkishor1 -p ${Docker_Hub_Pwd}"
            
        echo "==================================Docker Login Successfully==================================="
        }
    }
    
    stage("Push Docker Image To DockerHub"){
        
        echo "=======================================Pushing Docker Image==================================="
        
        sh "docker push abhishekkishor1/java-web-app-swarm:${buildNumber}"
        
        echo "=================================Docker Image Pushed Successfully============================="
    }
    
    stage("Connect With Docker Swarm Manager Server"){
        
        echo "==============================Login In Docker Swarm Manager Server============================"
        
        sshagent(['Docker-Swarm-Master-SSH']) {
            
            sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.41.85"
            
            echo "===================Logged In Docker Swarm Manager Server Successfully====================="
            
            echo "============================Initializing Docker Swarm Manager============================="
            
            sh "${masterLogin} docker swarm init || true"
            
            echo "======================Docker Swarm Manager Initialized Successfully======================="
            
            echo "============================Listing Docker Service==============================="
            
            sh "${masterLogin} docker service ls"
            
            echo "============================Removing Running Docker Service==============================="
            
            sh "${masterLogin} docker service rm javawebapp || true"
            
            echo "========================Removed Running Docker Service Successfully======================="
            
            echo "=================================Listing Docker Nodes====================================="
            
            sh "${masterLogin} docker node ls"
            
            echo "=======================Creating Docker Service Via Docker Swarm========================="
            
            sh "${masterLogin} docker service create --name javawebapp -p 8080:8080 --replicas 2 abhishekkishor1/java-web-app-swarm:${buildNumber}"
            
            echo "================================Docker Service Created==================================="
            
            echo "============================Listing Docker Service==============================="
            
            sh "${masterLogin} docker service ls"
            
        }
    }

}
